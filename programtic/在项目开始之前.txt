36 需求之坑
试图在想在项目初期弄清需求其实是不太可能的，因为那时即使是用户，也不清楚所有的需求，因为用户对需求的理解也是一个循序渐进的过程。我比较认同Scrum中的做法，逐步迭代，让用户参与整个的过程，给出反馈，这其实也是帮用户弄清了其需求。
了解用户为何要做某件事情的原因，而不是其目前做这件事情的方式。因为其可能一开始就错了，因为你可能有更好的方式 --- 你才是提供方法的那个人。
同理，在你帮助别人解决问题时，也要记得挖掘其根源，而不要跟着其方式往下走，因为他有可能从一开始就错了。

37 解开不可能解开的谜题
Think out of the box。
转换一下思路，很有可能就会柳暗花明。

38 等你准备好
我们似乎很容易走在两个极端。有的时候我们太激进，还没想好就开始coding了；而有的时候却爱拖延，迟迟不肯动手，总觉得还没准备好。自己属于哪种情况，问问内心其实很容易判断，关键是如何克服自己去正确的做事。

39 规范陷阱
有些规范描述起来相当复杂，但做起来却十分简单。让PD费劲的在spec上写下来，再让开发费劲的去理解，实在是一种浪费。这也是在Scrum中引入User Story好处：通过交流就能解决的问题，就不要费劲去写什么spec了。毕竟，spec不是目的，只是一种手段。

40 圆圈与箭头
没有过时的方法，也没有最优的流程，关键是看你如何摸索出一套适合你们项目于团队的流程。光追求某种先进的方法，只是流于表而疏于本。again，流程不是目的，只是一种手段。