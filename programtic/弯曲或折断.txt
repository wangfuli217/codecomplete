26 解耦与得墨忒耳法则
迪米特法则（Law of Demeter），意译的话是”最少知识原则“。这里采用如此奇怪的音译显得很唐突。
解耦包含逻辑解耦与物理解耦，其实关键就是一个：最少知识原则。能不知道的就尽量别知道，能不依赖的就尽量别依赖。当你写代码是发现需要再include一个头文件时：三思。

27 元程序设计
基础点讲，就是不要硬编码；
提升点讲，就是指软件的配置信息，尽量保存在在注册表中，或者配置文件中，可以动态配置
再提升点，就是软件设计中我们要封装变化，比如封装在接口之后，但如果可行，封装到代码之外才是最灵活的。

28 时间耦合
主要讲并发，要考虑并发，就要考虑：
    1. 单个操作是否足够独立
    2. 多个操作是否可以并行。
不要只考虑程序中并发，看看你的工作中，你们团队中工作流程的并发要求。

29 它只是视图
MVC模式，我觉得是观察者模式的一种特殊情况。通过接口实现了具体类之间的解耦，并实现了发布/订阅的工作模式。
这个大家应该都很熟悉的。

30 黑板
是更进一步的解耦，连Item29中需要的共同接口都解掉了。
但没怎么看明白~~~