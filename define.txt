作用域或者可见性指的是变量在程序内的可见和可引用的范围。
断言 assertion 是指在开发期间使用的，让程序在运行时进行自检的代码。
前条件是子程序或类的调用代码在调用子程序或实例化对象之前要确保为true的属性。前条件是调用方代码对其所调用的代码要承担的义务。
后条件是子程序或类在执行结束后要确保为true的属性。是子程序或类对调用方代码所承担的责任。

正确性 correctness：永远不返回不准确的结果。
健壮性 robustness：程序可以持久运行下去，哪怕返回不准确的结果。

健壮性是指系统在检测到错误后运行的能力，通常架构描述的系统要比需求描述的系统更健壮。

对象对其他对象暴露的数据及方法 -- 公开接口 public interface
对象通过继承关系向其他派生对象暴露的部分 -- 受保护的接口 protected interface

抽象是一种能让你在关注某一概念的同时可以放心地忽略其中一些细节的能力 --- 在不同的层次处理不同的细节。
基类是一种抽象，它使你集中精力关注一组派生类所具有的共同特性，并在基类的层次上忽略各个具体派生类的细节。
一个好的接口也是一种抽象，它能让你关于接口本身而不是类的内部工作方式。

耦合度表示类与类之间或者子程序与子程序之间关系的紧密程度。

就近原则: 把相关的操作放在一起；让注释靠近它所描述的代码；让控制循环的代码靠近循环本身；把语句写成直线的代码。
          把对一个变量的引用局部化，即把引用点尽可能集中在一起总是一种很好的方法。
          
声明: 指定了变量的类型；
定义: 为变量指定特定的取值。
作用域scope或者可见性visibility: 变量在程序内的可见和可引用的范围。

攻击窗口（window of vulnerability）:介于同一变量多个引用点之间的代码. 因为一些新的代码可能会增加在窗口中,不当的修改这个变量,增加潜在的风险.
跨度（span）:衡量一个变量的不同引用点的靠近程度的一种方法. 把变量的引用点集中起来的主要好处是提高程序的可读性.
存活时间（live time）:一个变量存在期间所跨越的语句总数.
长存活时间意味着一个变量经历了很多语句，短存活时间意味着只经历很少的语句，跨度则表明了对一个变量引用的集中程度。