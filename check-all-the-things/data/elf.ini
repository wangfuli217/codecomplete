[bfbtester]
comment = Dangerous because it executes binaries
debian = bfbtester
files = ./debian/*/bin/* ./debian/*/usr/bin/* ./debian/*/sbin/* ./debian/*/usr/sbin/* ./debian/*/usr/games/*
types = application/x-executable
command = bfbtester -x{njobs} -a -t {files}
flags = dangerous

[lockdep]
flags = dangerous manual
debian = lockdep
files = ./debian/*/bin/* ./debian/*/usr/bin/* ./debian/*/sbin/* ./debian/*/usr/sbin/* ./debian/*/usr/games/*
types = application/x-executable
comment =
 Please test any installed pthread-using programs using lockdep
 Dangerous because it executes binaries
command = lockdep {files}

[zzuf]
flags = dangerous manual fuzz
debian = zzuf
files =
 ./debian/*/bin/* ./debian/*/usr/bin/* ./debian/*/sbin/* ./debian/*/usr/sbin/* ./debian/*/usr/games/*
 *.c *.cc *.cxx *.cpp
types = application/x-executable text/x-c text/x-c++
comment =
 Please fuzz test any installed programs using zzuf
 Dangerous because it executes binaries
command = zzuf command args

[afl]
flags = dangerous manual fuzz
debian = afl++ | afl
files =
 ./debian/*/bin/* ./debian/*/usr/bin/* ./debian/*/sbin/* ./debian/*/usr/sbin/* ./debian/*/usr/games/*
 *.c *.cc *.cxx *.cpp
types = application/x-executable text/x-c text/x-c++
comment =
 Please fuzz test any installed programs using American fuzzy lop
 Dangerous because it executes binaries
prereq = command -v afl-gcc
command = CC=afl-gcc CXX=afl-g++ ./configure ; make clean all ; afl-fuzz -i testcases -o findings command -arg @@

[hardening-check]
debian = devscripts (>= 2.17.10~) | hardening-includes
files = ./debian/*/bin/* ./debian/*/usr/bin/* ./debian/*/sbin/* ./debian/*/usr/sbin/* ./debian/*/usr/games/*
        ./debian/*/lib/lib*.so* ./debian/*/lib/*/lib*.so* ./debian/*/usr/lib/lib*.so* ./debian/*/usr/lib/*/lib*.so*
types = application/x-executable
flags = perl-inc-cwd-bug
command = hardening-check --quiet {files}

[leaktracer]
flags = dangerous modify manual
comment =
 Please check any installed C++ programs for memory leaks
 Please note that it creates/updates the leak.out file
 Dangerous because it executes binaries
files =
 ./debian/*/bin/* ./debian/*/usr/bin/* ./debian/*/sbin/* ./debian/*/usr/sbin/* ./debian/*/usr/games/*
 *.cc *.cxx *.cpp
types = application/x-executable text/x-c++
command = LeakCheck ./command && leak-analyze ./command ; rm -f leak.out

[tmperamental]
debian = tmperamental
flags = dangerous manual
comment =
 Please check any installed programs respect TMPDIR
 Dangerous because it executes binaries
files = ./debian/*/bin/* ./debian/*/usr/bin/* ./debian/*/sbin/* ./debian/*/usr/sbin/* ./debian/*/usr/games/*
types = application/x-executable
command = tmperamental command args

[ldd-unused]
flags = dangerous
comment = Dangerous because it executes binaries on some platforms
files = ./debian/*/bin/* ./debian/*/usr/bin/* ./debian/*/sbin/* ./debian/*/usr/sbin/* ./debian/*/usr/games/*
types = application/x-executable
command = ldd --unused {files}

[ldd-missing]
flags = dangerous
comment = Dangerous because it executes binaries on some platforms
files = ./debian/*/bin/* ./debian/*/usr/bin/* ./debian/*/sbin/* ./debian/*/usr/sbin/* ./debian/*/usr/games/*
types = application/x-executable
command = ldd --data-relocs {files}
command = ldd --function-relocs {files}

# TODO: checksec
# TODO: abigail-tools
# TODO: icheck
# TODO: abicheck
# TODO: valgrind
# TODO: electric-fence
# TODO: https://www.gnu.org/software/libc/manual/html_node/Heap-Consistency-Checking.html
# TODO: https://udrepper.livejournal.com/11429.html
# TODO: MALLOC_CHECK_=2 MALLOC_PERTURB_=$(($RANDOM % 255 + 1))
# TODO: fuzz
# TODO: https://github.com/vmware/chap
# TODO: https://metacpan.org/dist/Devel-Plumber
# TODO: https://github.com/eriksjolund/empty-argv-segfault-check
# TODO: https://github.com/yugr/ShlibVisibilityChecker
# TODO: https://blog.reverberate.org/2016/11/07/introducing-bloaty-mcbloatface.html
# TODO: https://github.com/yugr/sortcheck
# TODO: https://github.com/yugr/valgrind-preload
# TODO: https://github.com/yugr/sigcheck
# TODO: https://github.com/caolanm/callcatcher
# TODO: https://developers.redhat.com/blog/2019/02/04/annocheck-examining-the-contents-of-binary-files/
# TODO: https://github.com/trailofbits/krf
# TODO: https://github.com/google/path-auditor
# TODO: https://github.com/mmmds/sif
# TODO: https://github.com/facebookincubator/BOLT
# TODO: https://github.com/taviso/scanlimits
