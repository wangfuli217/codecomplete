[pyflakes]
debian = pyflakes
files = *.py
types = text/x-python text/x-script.python
command = pyflakes {files}

[pyflakes3]
debian = pyflakes3 | pyflakes (<< 1.1.0-1)
files = *.py
types = text/x-python text/x-script.python
command = pyflakes3 {files}

[pycodestyle]
flags = style
debian = pycodestyle
files = *.py
types = text/x-python text/x-script.python
command = pycodestyle --ignore W191 {files}

[pydocstyle]
flags = style
debian = pydocstyle
files = *.py
types = text/x-python text/x-script.python
command = pydocstyle --add-ignore D100,D101,D102,D103,D104,D105,D106,D107 {cwd}
command = pydocstyle {cwd}

[site-packages]
command = grep -nHrw site-packages {cwd}

[pythonpath]
command = grep -nHrw PYTHONPATH {cwd}

[environ-home]
files = *.py
types = text/x-python text/x-script.python
command = grep -nH 'environ *\[.HOME.\]' {files}

[yaml-load]
files = *.py
types = text/x-python text/x-script.python
comment = These calls are potentially vulnerable to Python code injection
command = grep -nHF 'yaml.load' {files}

[pylint]
debian = pylint
files = *.py
types = text/x-python text/x-script.python
# TODO: decreasing verbosity
command = pylint --rcfile=/dev/null --msg-template='{{path}}:{{line}}:{{column}}: [{{category}}:{{symbol}}] {{obj}}: {{msg}}' --reports=n {files}

[pylint3]
debian = pylint3
files = *.py
types = text/x-python text/x-script.python
# TODO: decreasing verbosity
command = pylint3 --rcfile=/dev/null --msg-template='{{path}}:{{line}}:{{column}}: [{{category}}:{{symbol}}] {{obj}}: {{msg}}' --reports=n {files}

[mypy]
debian = mypy
files = *.py
types = text/x-python text/x-script.python
command = mypy --fast-parser --cache-dir /dev/null {files}

[pyroma]
flags = dangerous fixme fixme-silent
debian = python-pyroma
files = ./setup.py
command = pyroma -d {cwd}

[pyroma3]
flags = dangerous fixme fixme-silent
debian = python3-pyroma
files = ./setup.py
command = pyroma3 -d {cwd}

[python2-bandit]
flags = fixme fixme-silent
debian = python-bandit
files = *.py
types = text/x-python text/x-script.python
command = python2-bandit -r {cwd}

[python3-bandit]
flags = fixme fixme-silent
debian = python3-bandit
files = *.py
types = text/x-python text/x-script.python
command = python3-bandit -r {cwd}

[dodgy]
flags = fixme fixme-silent
debian = dodgy
types = text/*
command = dodgy

[vulture]
debian = vulture
files = *.py
command = vulture {cwd}

[python-check-manifest]
comment = Runs setup.py from the current directory
flags = dangerous
debian = check-manifest
files = MANIFEST.in
command = check-manifest

# TODO: radon
# TODO: black
# TODO: yapf3
# TODO: hacking
# TODO: flake8
# TDOO: https://github.com/PyCQA/flake8-import-order
# TODO: https://github.com/PyCQA/flake8-bugbear
# TODO: https://github.com/PyCQA/flake8-commas
# TODO: https://github.com/PyCQA/doc8
# TODO: https://github.com/stephenfin/flake8-asserts
# TODO: pylint-celery
# TODO: pylint-django
# TODO: pylint-flask
# TODO: frosted
# TODO: pychecker (dangerous)
# TODO: twistedchecker
# TODO: pymetrics
# TODO: prospector
# TODO: pylama
# TODO: python-debtcollector
# TODO: python-afl
# TODO: python3-yapf
# TODO: python3-requirements-detector
# TODO: https://github.com/jlachowski/clonedigger
# TODO: https://github.com/rubik/xenon
# TODO: https://gcc-python-plugin.readthedocs.io/en/latest/cpychecker.html
# TODO: https://jwilk.net/software/pydiatra
# TODO: shell metacharacter injection: subprocess shell=True os.system os.popen popen2 commands
# TODO: https://github.com/google/pytype
# TODO: pep8-naming
# TODO: https://github.com/spinda/lavender
# TODO: https://github.com/PyCQA/isort
# TODO: https://pyup.io/safety/
# TODO: https://github.com/r1chardj0n3s/pip-check-reqs
# TODO: https://github.com/asottile/reorder_python_imports
# TODO: https://github.com/asottile/pyupgrade
# TODO: https://github.com/asottile/flake8-typing-imports
# TODO: https://github.com/python-security/pyt
# TODO: https://github.com/python-modernize/python-modernize
# TODO: https://github.com/marcoeilers/nagini/
# TODO: https://github.com/PyCQA/flake8-import-order/
# TODO: https://github.com/elijahandrews/flake8-blind-except
# TODO: https://github.com/gforcada/flake8-builtins
# TODO: https://github.com/globality-corp/flake8-logging-format
# TODO: https://gitlab.com/pycqa/flake8-docstrings
# TODO: https://pypi.org/project/flake8-rst-docstrings/
# TODO: https://github.com/terrencepreilly/darglint
# TODO: https://pyre-check.org/
# TODO: https://pyre-check.org/docs/pysa-basics.html
# TODO: https://github.com/stb-tester/stb-tester/blob/master/stbt/pylint_plugin.py
# TODO: https://github.com/duo-labs/dlint
# TODO: https://github.com/pschanely/CrossHair
# TODO: python-autopep8
# TODO: https://github.com/jwodder/check-wheel-contents
# TODO: https://import-linter.readthedocs.io/
# TODO: https://github.com/OpenNewsLabs/open-project-linter
# TODO: https://github.com/hakancelik96/unimport
# TODO: https://github.com/myint/autoflake
# TODO: https://github.com/isidentical/teyit
# TODO: https://github.com/google/atheris
# TODO: https://github.com/ikamensh/flynt
# TODO: https://github.com/econchick/interrogate
# TODO: https://github.com/SourceCode-AI/aura
# TODO: python3-refurb https://github.com/dosisod/refurb
