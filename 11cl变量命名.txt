# 11 变量名的力量
## 11.1 核对表
cc(变量命名){}
### 11.1.1 核对表：变量命名

__命名的一般注意事项__
1. 名字完整并准确地表达了变量所代表的含义了吗？
1. 名字反映了现实世界的问题而不是编程语言方案吗？
1. 名字足够长，可以让你无须苦苦思索吗？
1. 如果有计算值限定符，它被放在名字的最后吗？
1. 名字中用Count或者Index来代替Num了吗？

__为特定类型的数据命名__
1. 循环下标的名字有意义吗(如果循环的长度超过了一两行代码或者出现了嵌套循环，那么就应该是i、j或者k以外的其他名字)？
1. 所有的“临时”变量都重新命以更有意义的名字了吗？
1. 当布尔变量的值为真时，变量名能准确表达其含义吗？
1. 枚举类型的名字中含有能够表示其类别的前缀或后缀了吗？例如，把Color_用于Color_Red，Color_Green，Color_Blue等了吗？
1. 具名常量是根据它所代表的抽象实体而不是它所代表的数字来命名的吗？

__命名规则__
1. 规则能够区分局部数据、类的数据和全局数据吗？
1. 规则能够区分类型名、具名常量、枚举类型和变量名吗？
1. 规则能够在编译器不强制检测只读参数的语言里标识出子程序中的输入参数吗？
1. 规则尽可能地与语言的标准规则兼容吗？
1. 名字为了可读性而加以格式化吗？

__短名字__
1. 代码用了长名字吗？(除非有必要使用短名字)
1. 是否避免只为省一个字符而缩写名字的情况？
1. 所有单词的缩写方式都一致吗？
1. 名字能够读出来吗？
1. 避免使用容易被看错或者读错的名字吗？
1. 在缩写对照表里对短名字做出说明了吗？

__常见命名问题__
1. 你避免使用容易让人误解的名字吗？
1. 你避免使用有相近含义的名字吗？
1. 你避免使用只有一两个字符不同的名字吗？
1. 你避免使用发音相近的名字吗？
1. 你避免使用包含数字的名字吗？
1. 你避免使用为了缩短而故意拼错的名字吗？
1. 你避免使用英语中经常拼错的名字吗？
1. 你避免使用与标准库子程序或者预定义变量名冲突的名字吗？
1. 你避免使用含有难读的字符的名字吗？

## 11.2 要点
1. 好的变量名是提高程序可读性的一项关键要素。对特殊种类的变量，比如循环下标和状态变量，需要加以特殊的考虑
1. 名字要尽可能地具体。那些太模糊或者太通用以至于能够用于多种目的的名字通常都是很不好的
1. 命名规则应该能够区分局部数据、类数据和全局数据。它们还应当可以区分类型名、具名常量、枚举类型名字和变量名
1. 无论做哪种类型项目，你都应该采用某种变量命名规则。你所采用的规则的种类取决于你的程序的规模，以及项目成员的人数
1. 现代编程语言很少需要用到缩写。如果你真的要使用缩写，请使用项目缩写词典或者标准前缀来帮助理解缩写
1. 代码阅读的次数远远多于编写的次数。确保你所取的名字更侧重于阅读方便而不是编写方便