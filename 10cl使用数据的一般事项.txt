# 10 变量
## 10.1 核对表
cc(使用数据的一般事项){}
### 10.1.1 核对表：使用数据的一般事项
__初始化变量__
1. 每一个子程序都检查其输入参数的正确性了吗？
1. 变量声明位置靠近变量第一次使用的位置吗？
1. 尽可能地在声明变量的同时初始化变量吗？
1. 如果无法同时声明和初始化变量，有没有在靠近第一次使用变量的位置声明变量？
1. 计数器和累加器经过了适当的初始化吗？如果需要再一次使用，之前重新初始化了吗？
1. 适当地重新初始化“需要重复执行的代码里的变量”了吗？
1. 代码在通过编译器编译的时候是不是没有警告信息？(你启用了所有可用的警告选项了吗？)
1. 如果你用的语言允许隐式声明，你为由此可能引发的问题做好补偿措施了吗？

__使用数据的其他事项__
1. 如果可能，所有变量都被定义为具有最小的作用域了吗？
1. 各变量的引用点都尽可能集中在一起吗？对同一变量的两次相邻引用，或者变量的整个生命周期都这样做了吗？
1. 控制结构符合数据类型吗？
1. 所有声明的变量都用到了吗？
1. 变量都在合适的时间绑定了吗？--也就是说，你有意识地在晚期绑定所带来的灵活性和增加的复杂度之间做出平衡了吗？
1. 每个变量都有且仅有一项用途吗？
1. 每个变量的含义都明确且没有隐含含义吗？

## 10.2 要点
1. 数据初始化过程很容易出错，所以请用本章描述的初始化方法(P240)来避免非预期的初始值而造成的错误
1. 最小化每个变量的作用域。把同一变量的引用点集中在一起。把变量限定在子程序或类的范围之内。避免使用全局数据
1. 把使用相同变量的语句尽可能地集中子在一起
1. 早期绑定会减低灵活性，但有助于减小复杂度。晚期绑定可以增加灵活性，同时增加复杂度
1. 把每个变量用于唯一的用途